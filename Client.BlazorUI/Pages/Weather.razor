@page "/weather"
@using Client.Lib.Services.Dummy
@inject HttpClient Http
@inject IDummyService ForecastService
<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

<button @onclick="HandleLoad"> Load</button>
@if (forecasts is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Shared.Lib.Entities.Dummy.WeatherForecast[]? forecasts = [];
    private bool flag = false;


    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

    public async Task<Shared.Lib.Entities.Dummy.WeatherForecast[]?> GetForecast()
    {
        return await ForecastService.GetWeatherForecasts();
    }

    async Task HandleLoad()
    {
        forecasts = await GetForecast();
        flag = true;
    }
}
